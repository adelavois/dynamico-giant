#---------------------------------#
# Run parameters for the 1D model #                                         
#---------------------------------#

## Planetary constants
## ~~~~~~~~~~~~~~~~~~~~~~~
## NB: those are mandatory
## ~~~~~~~~~~~~~~~~~~~~~~~
## LENGTH OF A DAY in s
#daysec         = 38362. # Voyager System III
#daysec         = 38640. # Cassini System IIIa
daysec         = 38052. # Read System IIIw
## GRAVITY in m s-2
g              = 10.44
##PLANETARY RADIUS in m
rad            = 6.0268000E+07
## LENGTH OF A YEAR in days
#year_day       = 24232. # Voyager System III
#year_day       = 24058. # Cassini System IIIa
year_day       = 24430. # Read System IIIw
## MIN DIST STAR-PLANET in AU [periastron]
periastr       = 9.02152
## MAX DIST STAR-PLANET in AU [apoastron]
apoastr        = 10.05448
## DATE OF PERIASTRON in days
peri_day       = 19280.
## OBLIQUITY in deg
obliquit       = 26.73
## SURFACE PRESSURE in Pa
psurf          = 1.e6


## Time integration parameters
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Initial date (in solar days,=0 at Ls=0)
day0           = 0
# Initial local time (in hours, between 0 and 24)
time           = 12 
# Number of time steps per sol
day_step       = 1
# Number of sols to run 
ndt            = 342020
# Number of steps between each writing in diagfi
ecritphy=5000

# OVERRIDE callphys.def settings
# ... this to ensure compliancy with the low day_step value above
iradia = 25

tracer=.false.

## Vertical levels
## ~~~~~~~~~~~~~~~
# hybrid vertical coordinate ? (.true. for hybrid and .false. for sigma levels)
hybrid         = .false.
# autocompute vertical discretisation? (useful for exoplanet runs)
autozlevs      = .true.
autozlevs      = .false.
# Ceiling pressure (Pa) ? (only used if autozlevs = .true.)
pceil          = 10.

## Thermal properties
## ~~~~~~~~~~~~~~~~~~
# Simulate global averaged conditions ? 
global1d       = .true.
# Latitude (deg) [only used if global1d = F]
latitude       = 0.0
# Solar Zenith angle (deg) [only used if global1d = T]
szangle        = 45. 
# Albedo of bare ground
albedo         = 0.0
# Emissivity of bare ground
emis           = 1.0
# Soil thermal inertia (SI)
inertia        = 0.001
# Initial CO2 ice on the surface (kg.m-2)
co2ice         = 0.

## Wind profile
## ~~~~~~~~~~~~
## zonal eastward component of the geostrophic wind (m/s)
u              = 0.
# meridional northward component of the geostrophic wind (m/s)
v              = 0.

## Initial atmospheric temperature profile
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Type of initial temperature profile
#         ichoice=1   Constant Temperature:  T=tref
#         [Mars] ichoice=2   Savidjari profile (as Seiff but with dT/dz=cte)
#         [Mars] ichoice=3   Lindner (polar profile)
#         [Mars] ichoice=4   inversion
#         [Mars] ichoice=5   Seiff  (standard profile, based on Viking entry)
#         ichoice=6   constant T  +  gaussian perturbation (levels)
#         ichoice=7   constant T  + gaussian perturbation (km)
#         ichoice=8   Read in an ascii file "profile" 
ichoice        = 8
# Reference temperature tref (K)
tref           = 200.
# Add a perturbation to profile if isin=1
isin           = 0
# peak of gaussian perturbation (for ichoice=6 or 7)
pic            = 26.522
# width of the gaussian perturbation (for ichoice=6 or 7)
largeur        = 10
# height of the gaussian perturbation (for ichoice=6 or 7)
hauteur        = 30.

Index: LMDZ.GENERIC/deftank/saturn1d/rcm1d.def
===================================================================
--- LMDZ.GENERIC/deftank/saturn1d/rcm1d.def	(révision 1711)
+++ LMDZ.GENERIC/deftank/saturn1d/rcm1d.def	(copie de travail)
@@ -47,6 +47,7 @@
 # ... this to ensure compliancy with the low day_step value above
 iradia = 25
 
+tracer=.false.
 
 ## Vertical levels
 ## ~~~~~~~~~~~~~~~
#!/bin/bash
export PATH=$PWD/tools/FCM/bin:$PATH

export ROOT=$PWD
set -x
echo $0 $* > rebuild_all
chmod a+x rebuild_all

compil_mode_defined="FALSE"
compil_mode="prod"

job=1
full_defined="FALSE"
with_xios_defined="TRUE"
with_orchidee_defined="FALSE"
arch_defined="FALSE"
parallel_defined="FALSE"
arch_path="../ARCH"
arch_default_path="arch"
parallel="none"
physics="none"
build_deps="TRUE"
CPP_KEY="CPP_NONE" 
ICOSA_LIB=""

while (($# > 0))
  do
  case $1 in
      "-h") cat <<fin
Usage :
makegcm [options] -m arch -p phys exec
[-h]                       : help
[-prod / -dev / -debug]    : compilation mode: production (default) / developpement / debug .
[-nodeps]                  : do not build dependencies (XIOS, IOIPSL, LMDZ5, ICOSAGCM)
 -arch nom_arch            : target architecture
 -p phys                   : physics package (e.g. std , venus , ...)
[-p_opt "options"]         : additional options for physics package
fin
	  exit;;

      "-p")
          phys=$2 ; shift ; shift ;;
      
      "-p_opt")
          phys_opt=$2 ; shift ; shift ;;
          
      "-prod")
	  compil_mode="prod" ; shift ;;

      "-dev")
	  compil_mode="dev" ; shift ;;

      "-debug")
	  compil_mode="debug" ; shift ;;

      "-arch")
	  arch=$2 ; arch_defined="TRUE"; shift ; shift ;;
 
      "-arch_path")
	  arch_path=$2 ; arch_path_defined="TRUE"; shift ; shift ;;

      "-parallel")
	  parallel=$2 ; parallel_defined="TRUE"; shift ; shift ;;

      "-job")
	  job=$2 ; shift ; shift;;

      "-full")
	  full_defined="TRUE" ; shift ;;

      "-nodeps")
	  build_deps="FALSE" ; shift ;;

      "-with_xios")
	  with_xios_defined="TRUE" ; shift ;;

      "-with_orchidee")
	  with_orchidee_defined="TRUE" ; shift ;;

      *)
	  code="$1" ; shift ;;
  esac
done

rm -f .void_file
echo > .void_file
rm -rf .void_dir
mkdir .void_dir

if [[ "$arch_defined" == "TRUE" ]]
then
  rm -f arch.path
  rm -f arch.fcm
  rm -f arch.env

  if test -f $arch_path/arch-${arch}.path
  then
    ln -s $arch_path/arch-${arch}.path arch.path
  elif test -f $arch_default_path/arch-${arch}.path
  then
    ln -s $arch_default_path/arch-${arch}.path arch.path
  fi
        
  if test -f $arch_path/arch-${arch}.fcm
  then
    ln -s $arch_path/arch-${arch}.fcm arch.fcm
  elif test -f $arch_default_path/arch-${arch}.fcm
  then
    ln -s $arch_default_path/arch-${arch}.fcm arch.fcm
  fi

  if test -f $arch_path/arch-${arch}.env
  then
    ln -s $arch_path/arch-${arch}.env arch.env
  elif test -f $arch_default_path/arch-${arch}.env
  then
    ln -s $arch_default_path/arch-${arch}.env arch.env
  else
    ln -s .void_file arch.env
  fi
  source arch.env
  source arch.path
else
  echo "Please define a target architecture"
  exit 1
fi

LD_FLAGS="%BASE_LD"

if [[ "$compil_mode" == "prod" ]]
then
  COMPIL_FFLAGS="%PROD_FFLAGS"
elif [[ "$compil_mode" == "dev" ]]
then
  COMPIL_FFLAGS="%DEV_FFLAGS"
elif [[ "$compil_mode" == "debug" ]]
then
  COMPIL_FFLAGS="%DEBUG_FFLAGS"
fi

if [[ "$parallel" == "mpi" ]]
then
  CPP_KEY="$CPP_KEY CPP_USING_MPI"
elif [[ "$parallel" == "omp" ]]
then
  CPP_KEY="$CPP_KEY CPP_USING_OMP"
  COMPIL_FFLAGS="$COMPIL_FFLAGS %OMP_FFLAGS"
  LD_FLAGS="$LD_FLAGS %OMP_LD"
elif [[ "$parallel" == "mpi_omp" ]]
then
  CPP_KEY="$CPP_KEY CPP_USING_MPI CPP_USING_OMP"
  COMPIL_FFLAGS="$COMPIL_FFLAGS %OMP_FFLAGS"
  LD_FLAGS="$LD_FLAGS %OMP_LD"
elif [[ "$parallel" == "none" ]]
then
  parallel="none"
else 
  echo "-parallel value $parallel is invalid, only permited <none>, <mpi>, <omp> or <mpi_omp>"
  exit 1
fi

if [[ "$with_orchidee_defined" == "TRUE" ]]
then
  ICOSA_LIB="$ICOSA_LIB $ORCHIDEE_LIBDIR $ORCHIDEE_LIB"
fi  

if [[ "$with_xios_defined" == "TRUE" ]]
then
  CPP_KEY="$CPP_KEY CPP_USING_XIOS"
  COMPIL_FFLAGS="$COMPIL_FFLAGS $XIOS_INCDIR"
  ICOSA_LIB="$ICOSA_LIB $XIOS_LIBDIR $XIOS_LIB"
fi  

ICOSA_LIB="$ICOSA_LIB $IOIPSL_LIBDIR $IOIPSL_LIB $NETCDF_LIBDIR $NETCDF_LIB $HDF5_LIBDIR $HDF5_LIB"

rm bin/*

if [[ "$full_defined" == "TRUE" ]]
then
  full_flag="-full"
  full_flag2="--full"
else 
  full_flag=""
  full_flag2=""
fi

rm -f config.fcm

echo "%COMPIL_FFLAGS $COMPIL_FFLAGS $NETCDF_INCDIR" >> config.fcm
echo "%LD_FLAGS $LD_FLAGS" >> config.fcm
echo "%CPP_KEY $CPP_KEY" >> config.fcm
echo "%PHYS phy$phy" >> config.fcm
echo "%LIB $ICOSA_LIB">> config.fcm

if [[ "$build_deps" == "TRUE" ]]
then

    cd ../IOIPSL
    ./makeioipsl_fcm -$compil_mode -parallel -arch $arch -arch_path $arch_path -j $job $full_flag  || exit 1
    cd -

    cd ../XIOS
    ./make_xios --$compil_mode --arch $arch --arch_path $arch_path --job $job $full_flag2 || exit 1
    cd -

    if [[ "$with_orchidee_defined" == "TRUE" ]]
    then
	cd ../ORCHIDEE
	./makeorchidee_fcm -$compil_mode -parallel $parallel -xios2 -arch $arch -arch_path $arch_path -j $job $full_flag  || exit 1
	cd -
    fi

#    cd ../LMDZ5
#    lmdz_veget="false"
#    if [[ "$with_orchidee_defined" == "TRUE" ]]
#    then
#	lmdz_veget="orchidee2.0"
#    fi
#    ./makelmdz_fcm gcm -$compil_mode -mem -parallel $parallel -nodyn -io xios -v $lmdz_veget -arch $arch -arch_path $arch_path -j $job $full_flag || exit 1
#    cd -

    cd ../LMDZ.COMMON
    ./makelmdz_fcm -full -p $phys $phys_opt -$compil_mode -parallel $parallel -libphy -io xios -arch $arch -arch_path $arch_path -j $job $full_flag || exit 1
    cd -

    cd ../ICOSAGCM
    ./make_icosa -$compil_mode -parallel $parallel -external_ioipsl -with_xios -arch $arch -arch_path $arch_path -job $job $full_flag || exit 1
    cd -
fi

./build --job $job $full_flag2
Index: ICOSA_LMDZ/make_icosa_lmdz
===================================================================
--- ICOSA_LMDZ/make_icosa_lmdz	(révision 1711)
+++ ICOSA_LMDZ/make_icosa_lmdz	(copie de travail)
@@ -220,7 +220,7 @@
 #    cd -
 
     cd ../LMDZ.COMMON
-    ./makelmdz_fcm -p $phys $phys_opt -$compil_mode -parallel $parallel -libphy -io xios -arch $arch -arch_path $arch_path -j $job $full_flag || exit 1
+    ./makelmdz_fcm -full -p $phys $phys_opt -$compil_mode -parallel $parallel -libphy -io xios -arch $arch -arch_path $arch_path -j $job $full_flag || exit 1
     cd -
 
     cd ../ICOSAGCM
