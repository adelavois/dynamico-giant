#!/bin/bash
##### TEST EHOUARN
##SBATCH --nodes=1
##SBATCH --ntasks-per-node=10
######
#SBATCH --nodes=2
#SBATCH --ntasks-per-node=20
###### TEST MPI 
##SBATCH --nodes=50
##SBATCH --ntasks-per-node=24
##SBATCH --cpus-per-task=1
#####
### set --threads-per-core=2 for hyperthreading
#SBATCH --threads-per-core=1
#SBATCH -J SATURN
#SBATCH --time=00:15:00
#SBATCH --output job_mpi.%j.out
###SBATCH --constraint=BDW28
#SBATCH --constraint=HSW24
#SBATCH --exclusive
##SBATCH --mem=120G
###SBATCH -p all
###SBATCH -p highmem

export EXEC_NAME=/scratch/cnt0026/lmd7357/aspigaheat/MODELES/ICOSA_LMDZ/bin/icosa_lmdz.exe

set -vx

source ../ARCH/arch-X64_OCCIGEN.env


#printenv | sort
export OMP_NUM_THREADS=1
export OMP_STACKSIZE=256M
export KMP_AFFINITY=granularity=fine,compact,1,0,verbose

### just one
#srun --resv-ports --kill-on-bad-exit=1 --mpi=pmi2 --label -c $OMP_NUM_THREADS -n $SLURM_NTASKS $EXEC_NAME > icosa_lmdz.out 2>&1
#exit

count=1
limcount=$((count+11))
while [ $count -lt $limcount ]
do
  echo "**************************************"
  echo "RUN NUMBER "$count
  echo "**************************************"
  ##
  ln -sf start_icosa_$count.nc start_icosa.nc
  ln -sf startfi_$count.nc     startfi.nc
  ##
  srun --resv-ports --kill-on-bad-exit=1 --mpi=pmi2 --label -c $OMP_NUM_THREADS -n $SLURM_NTASKS $EXEC_NAME > icosa_lmdz.out.$count 2>&1
  ##
  count=$((count+1))
  mv Xhistins.nc      Xhistins_$count".nc"
  mv restart_icosa.nc start_icosa_$count".nc"
  mv restartfi.nc     startfi_$count".nc"
done



